name: packaging
on: 
  - push

jobs:
  format:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12' 
      
      - name: Install tox
        run: python -m pip install tox
      - name: Run black 
        run: tox -e format

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install tox
        run: python -m pip install tox

      - name: Run flake8
        run: tox -e lint

  typecheck:
    name: Type check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install tox
        run: python -m pip install tox

      - name: Run mypy
        run: python -m tox -e typecheck

        
  test:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - version: "3.10"
            toxenv: "py310"
          - version: "3.11"
            toxenv: "py311"
          - version: "3.12"
            toxenv: "py312"

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python.version }}
      
      - name: Install tox
        run: python -m pip install tox
      - name: Run tests
        run: tox -e ${{ matrix.python.toxenv }}

    build_source_dist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"

      - name: Install build
        run: python -m pip install build

      - name: Run build
        run: python -m build --sdist
        working-directory: ch07/first-python-package # You don't need this in your package

      - uses: actions/upload-artifact@v3
        with:
          path: ch07/first-python-package/dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-10.15]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.3.1

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheels

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheels/*.whl

  publish:
    name: Publish package
    if: startsWith(github.event.ref, 'refs/tags/v')
    needs:
      - format
      - lint
      - typecheck
      - test
      - build_source_dist
      - build_wheels
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: ./dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          